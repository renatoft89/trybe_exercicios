{"ast":null,"code":"var _jsxFileName = \"/home/renatoft89/Documentos/trybe_exercicios/front-end/Bloco 11 - Componentes com Estado, Eventos e Formul\\xE1rios com React/trybe_11.2/my-form-2.0/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport FormError from './FormError';\nimport FormDataDisplay from './FormDataDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  cpf: '',\n  address: '',\n  city: '',\n  countryState: '',\n  addressType: '',\n  resume: '',\n  role: '',\n  roleDescription: '',\n  formError: {},\n  submitted: false\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      let {\n        name,\n        value\n      } = event.target;\n      if (name === 'name') value = value.toUpperCase();\n      if (name === 'address') value = this.validateAddress(value);\n      this.updateState(name, value);\n    };\n\n    this.onBlurHandler = event => {\n      let {\n        name,\n        value\n      } = event.target;\n      if (name === 'city') value = value.match(/^\\d/) ? '' : value;\n      this.updateState(name, value);\n    };\n\n    this.validateAddress = address => address.replace(/[^\\w\\s]/gi, '');\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.resetForm = () => {\n      this.setState(INITIAL_STATE);\n    };\n\n    this.sendForm = () => {\n      this.setState({\n        submitted: true\n      });\n    };\n\n    this.state = INITIAL_STATE;\n  }\n\n  updateState(name, value) {\n    this.setState(state => ({\n      [name]: value,\n      formError: { ...state.formError,\n        [name]: this.validateField(name, value)\n      }\n    }));\n  }\n\n  validateField(fieldName, value) {\n    switch (fieldName) {\n      case 'email':\n        const isValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2})$/i);\n        return isValid ? '' : ' is invalid';\n\n      default:\n        break;\n    }\n\n    return '';\n  }\n\n  render() {\n    const {\n      submitted\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        sendForm: this.sendForm,\n        resetForm: this.resetForm,\n        changeHandler: this.changeHandler,\n        currentState: this.state,\n        onBlurHandler: this.onBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(FormError, {\n          formError: this.state.formError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), submitted && /*#__PURE__*/_jsxDEV(FormDataDisplay, {\n        currentState: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/renatoft89/Documentos/trybe_exercicios/front-end/Bloco 11 - Componentes com Estado, Eventos e FormulÃ¡rios com React/trybe_11.2/my-form-2.0/src/App.js"],"names":["React","Component","Form","FormError","FormDataDisplay","INITIAL_STATE","name","email","cpf","address","city","countryState","addressType","resume","role","roleDescription","formError","submitted","App","constructor","props","changeHandler","event","value","target","toUpperCase","validateAddress","updateState","onBlurHandler","match","replace","handleSubmit","preventDefault","resetForm","setState","sendForm","state","validateField","fieldName","isValid","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport FormError from './FormError';\nimport FormDataDisplay from './FormDataDisplay';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  cpf: '',\n  address: '',\n  city: '',\n  countryState: '',\n  addressType: '',\n  resume: '',\n  role: '',\n  roleDescription: '',\n  formError: {},\n  submitted: false,\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  changeHandler = event => {\n    let { name, value } = event.target;\n\n    if (name === 'name') value = value.toUpperCase();\n    if (name === 'address') value = this.validateAddress(value);\n\n    this.updateState(name, value);\n  }\n\n  onBlurHandler = event => {\n    let { name, value } = event.target;\n\n    if (name === 'city') value = value.match(/^\\d/) ? '' : value;\n\n    this.updateState(name, value);\n  }\n\n  updateState(name, value) {\n    this.setState((state) => ({\n      [name]: value,\n      formError: {\n        ...state.formError,\n        [name]: this.validateField(name, value)\n      }\n    }));\n  }\n\n  validateAddress = address => address.replace(/[^\\w\\s]/gi, '')\n\n  handleSubmit = event => {\n    event.preventDefault();\n  }\n\n  validateField(fieldName, value) {\n    switch (fieldName) {\n      case 'email':\n        const isValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2})$/i)\n        return isValid ? '' : ' is invalid';\n      default:\n        break;\n    }\n    return '';\n  }\n\n  resetForm = () => { this.setState(INITIAL_STATE) };\n\n  sendForm = () => { this.setState({ submitted: true }) };\n\n  render() {\n    const { submitted } = this.state;\n\n    return (\n      <main>\n        <Form\n          sendForm={this.sendForm}\n          resetForm={this.resetForm}\n          changeHandler={this.changeHandler}\n          currentState={ this.state }\n          onBlurHandler={ this.onBlurHandler }\n        />\n        <div className=\"container\">\n          <FormError formError={this.state.formError} />\n        </div>\n        { submitted && <FormDataDisplay currentState={ this.state } /> }\n      </main>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}