{"ast":null,"code":"var _jsxFileName = \"/home/renatoft89/Documentos/trybe_exercicios/front-end/Bloco 14 - Testes automatizados com React Testing Library/trybe_14.2/sd-017-live-lectures/react-and-mock-inicial/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport CharacterList from './components/CharacterList';\nimport Loading from './components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'https://rickandmortyapi.com/api/character';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getCharacters = async () => {\n      const {\n        results\n      } = await fetch(URL).then(response => response.json());\n      this.setState({\n        isLoading: false,\n        characters: results,\n        filteredCharacters: results\n      });\n    };\n\n    this.handleOnChange = _ref => {\n      let {\n        target: {\n          value\n        }\n      } = _ref;\n      this.setState({\n        search: value\n      });\n    };\n\n    this.handleFilterCharacters = event => {\n      event.preventDefault();\n      const {\n        characters,\n        search\n      } = this.state;\n      const filteredCharacters = characters.filter(_ref2 => {\n        let {\n          name\n        } = _ref2;\n        return name.toUpperCase().includes(search.toUpperCase());\n      });\n      this.setState({\n        filteredCharacters\n      });\n    };\n\n    this.state = {\n      characters: [],\n      filteredCharacters: [],\n      isLoading: true,\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  render() {\n    const {\n      filteredCharacters,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleFilterCharacters,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Rick Sanches...\",\n          onChange: this.handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(CharacterList, {\n        characters: filteredCharacters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/renatoft89/Documentos/trybe_exercicios/front-end/Bloco 14 - Testes automatizados com React Testing Library/trybe_14.2/sd-017-live-lectures/react-and-mock-inicial/src/App.js"],"names":["React","CharacterList","Loading","URL","App","Component","constructor","getCharacters","results","fetch","then","response","json","setState","isLoading","characters","filteredCharacters","handleOnChange","target","value","search","handleFilterCharacters","event","preventDefault","state","filter","name","toUpperCase","includes","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAG,GAAG,2CAAZ;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,aAfc,GAeE,YAAY;AAC1B,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAMC,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA5B,CAA1B;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,UAAU,EAAEP,OAAhC;AAAyCQ,QAAAA,kBAAkB,EAAER;AAA7D,OAAd;AACD,KAlBa;;AAAA,SAoBdS,cApBc,GAoBG,QAA2B;AAAA,UAA1B;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAA0B;AAC1C,WAAKN,QAAL,CAAc;AAAEO,QAAAA,MAAM,EAAED;AAAV,OAAd;AACD,KAtBa;;AAAA,SAwBdE,sBAxBc,GAwBYC,KAAD,IAAW;AAClCA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAER,QAAAA,UAAF;AAAcK,QAAAA;AAAd,UAAyB,KAAKI,KAApC;AACA,YAAMR,kBAAkB,GAAGD,UAAU,CAACU,MAAX,CAAkB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAcA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BR,MAAM,CAACO,WAAP,EAA5B,CAAd;AAAA,OAAlB,CAA3B;AACA,WAAKd,QAAL,CAAc;AAAEG,QAAAA;AAAF,OAAd;AACD,KA7Ba;;AAEZ,SAAKQ,KAAL,GAAa;AACXT,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,kBAAkB,EAAE,EAFT;AAGXF,MAAAA,SAAS,EAAE,IAHA;AAIXM,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,aAAL;AACD;;AAmBDuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,kBAAF;AAAsBF,MAAAA;AAAtB,QAAoC,KAAKU,KAA/C;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAE,KAAKH,sBAArB;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,iBAA/B;AAAiD,UAAA,QAAQ,EAAE,KAAKJ;AAAhE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMIH,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAiB,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEE;AAA3B;AAAA;AAAA;AAAA;AAAA,cAN9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA7C+B;;AAgDlC,eAAeZ,GAAf","sourcesContent":["import React from 'react'\nimport './App.css';\nimport CharacterList from './components/CharacterList';\nimport Loading from './components/Loading';\n\nconst URL = 'https://rickandmortyapi.com/api/character';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      filteredCharacters: [],\n      isLoading: true,\n      search: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getCharacters()\n  }\n\n\n  getCharacters = async () => {\n    const { results } = await fetch(URL).then(response => response.json())\n    this.setState({ isLoading: false, characters: results, filteredCharacters: results })\n  }\n\n  handleOnChange = ({ target: { value } }) => {\n    this.setState({ search: value })\n  }\n\n  handleFilterCharacters = (event) => {\n    event.preventDefault();\n    const { characters, search } = this.state;\n    const filteredCharacters = characters.filter(({ name }) => name.toUpperCase().includes(search.toUpperCase()))\n    this.setState({ filteredCharacters })\n  }\n\n  render() {\n    const { filteredCharacters, isLoading } = this.state\n    return (\n      <main className=\"App\">\n        <form onSubmit={this.handleFilterCharacters}>\n          <input type='text' placeholder='Rick Sanches...' onChange={this.handleOnChange} />\n          <button type='submit'>Buscar</button>\n        </form>\n        {\n          isLoading ? <Loading /> : <CharacterList characters={filteredCharacters} />\n        }\n      </main>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}